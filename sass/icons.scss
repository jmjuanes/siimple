@use "sass:map";
@use "sass:string";
@use "./naming.scss" as naming;
@use "./variants.scss" as variants;
@use "./utils.scss" as utils;

// @description Get the unicode value of the specified icon
// @param {string} $name Icon name
// @returns {string} $unicode Unicode value of the specified icon
@function get-icon($name) {
    @return map.get($icons, "#{$name}");
}

// @description Get a list of all available icons
@function get-icons() {
    @return map.keys($icons);
}

// @description Check if the specified icon exists
@function has-icon($name) {
    @return map.has-key($icons, "#{$name}");
}

// Get the icon str to include
@function get-icon-str($name) {
    $icon-str: string.unquote(string.insert(get-icon($name), "\\", 1));
    @return string.unquote("\"") + $icon-str + string.unquote("\"");
}

// Icons module
@mixin icons($options: utils.empty-map()) {
    $icons-prefix: naming.get-prefix("icons");
    $icons-font-name: utils.get-in($options, "font-name", "siimple-icons");
    $icons-font-path: utils.get-in($options, "font-path", "./");
    // Generate fonts paths
    $font-ttf: "#{$icons-font-path}#{$icons-font-name}.ttf";
    $font-woff: "#{$icons-font-path}#{$icons-font-name}.woff";
    // Generate icons styles
    @font-face {
        font-family: $icons-font-name;
        font-style: normal;
        font-weight: normal;
        src: url(#{$font-ttf}) format("truetype"), url(#{$font-woff}) format("woff");
    }
    // Icons base styles
    [class^="#{$icons-prefix}"],
    [class*=" #{$icons-prefix}"] {
        align-self: center;
        // display: inline-flex;
        font-family: #{$icons-font-name};
        // font-size: default;
        font-style: normal;
        font-weight: normal !important;
        line-height: 1; // utils.get-in($options, "line-height", 1),
        text-rendering: auto;
        vertical-align: -0.125em;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        &:before {
            box-sizing: border-box; //inherit;
            // display: block;
        }
    }
    // All icons
    @each $icon in get-icons() {
        $icon-class: "#{$icons-prefix}#{$icon}";
        .#{$icon-class}:before {
            content: get-icon-str($icon);
        }
    }
}
