@use "sass:map";
@use "../constants.scss" as constants;
@use "../plugins.scss" as plugins;
@use "../utils.scss" as utils;

// @description markup plugin
@function plugin-markup() {
    @return (
        // Paragraph style
        plugins.create-markup-plugin((
            "id": "text.paragraph",
            "tag": "p",
            "styles": (
                "margin-bottom": 1rem,
                "margin-top": 0px,
            ),
            "variants": (
                "default": constants.$default-paragraph-variant,
            ),
        )),
        // Anchor style
        plugins.create-markup-plugin((
            "id": "text.link",
            "tag": "a",
            "variants": (
                "default": (
                    "color": "primary",
                ),
            ),
        )),
        // Small text
        plugins.create-markup-plugin((
            "id": "text.small",
            "tag": "small",
            "variants": (
                "default": (
                    "font-size": "small",
                ),
            ),
        )),
        // Bold text
        plugins.create-markup-plugin((
            "id": "text.strong",
            "tag": "strong,b",
            "variants": (
                "default": (
                    "font-weight": "bold",
                ),
            ),
        )),
        // Code block style
        plugins.create-markup-plugin((
            "id": "code.block",
            "tag": "pre",
            "styles": (
                "overflow-x": auto,
                // Fix inline code blocks inside pre elements
                "& code": (
                    "color": inherit,
                ),
            ),
            "variants": (
                "default": (
                    "font-family": "monospace",
                ),
            ),
        )),
        // Inline code style
        plugins.create-markup-plugin((
            "id": "code.inline",
            "tag": "code",
            "styles": (
                "font-size": inherit,
                "text-decoration": none,
            ),
            "variants": (
                "default": (
                    "color": "primary",
                    "font-family": "monospace",
                ),
            ),
        )),
        // Rule style
        plugins.create-markup-plugin((
            "id": "divider",
            "tag": "hr",
            "styles": (
                "border": 0px,
                "display": block,
                "height": 0.125rem,
                "padding": 0px,
                //Divider first and last child
                "&:not(:first-child)": (
                    "margin-top": 1rem,
                ),
                "&:not(:last-child)": (
                    "margin-bottom": 1rem,
                ),
            ),
            "variants": (
                "default": constants.$default-divider-variant,
            ),
        )),
        // Blockquote style
        plugins.create-markup-plugin((
            "id": "blockquote",
            "tag": "blockquote",
            "styles": (
                "border-left-color": currentColor,
                "border-left-style": solid,
                "border-left-width": 0.25rem,
                "display": block,
                "margin-bottom": 1rem,
                "margin-left": 0px,
                "margin-right": 0px,
                "opacity": 0.6,
                "padding-bottom": 0.75rem,
                "padding-left": 1.25rem,
                "padding-right": 0.75rem,
                "padding-top": 0.75rem,
            ),
            "variants": (
                "default": (
                    "color": "text",
                ),
            ),
        )),
        // Table style
        plugins.create-markup-plugin((
            "id": "table",
            "tag": "table",
            "styles": (
                "width": 100%,
            ),
            "variants": (
                "default": utils.empty-map(),
            ),
        )),
        // Heading 1
        plugins.create-markup-plugin((
            "id": "text.heading",
            "tag": "h1",
            "styles": (
                "font-size": map.get(constants.$headings, "1"),
            ),
            "variants": (
                "default": constants.$default-heading-variant,
            ),
        )),
        // Heading 2
        plugins.create-markup-plugin((
            "id": "text.heading",
            "tag": "h2",
            "styles": (
                "font-size": map.get(constants.$headings, "2"),
            ),
            "variants": (
                "default": constants.$default-heading-variant,
            ),
        )),
        // Heading 3
        plugins.create-markup-plugin((
            "id": "text.heading",
            "tag": "h3",
            "styles": (
                "font-size": map.get(constants.$headings, "3"),
            ),
            "variants": (
                "default": constants.$default-heading-variant,
            ),
        )),
        // Heading 4
        plugins.create-markup-plugin((
            "id": "text.heading",
            "tag": "h4",
            "styles": (
                "font-size": map.get(constants.$headings, "4"),
            ),
            "variants": (
                "default": constants.$default-heading-variant,
            ),
        )),
        // Heading 5
        plugins.create-markup-plugin((
            "id": "text.heading",
            "tag": "h5",
            "styles": (
                "font-size": map.get(constants.$headings, "5"),
            ),
            "variants": (
                "default": constants.$default-heading-variant,
            ),
        )),
        // Heading 6
        plugins.create-markup-plugin((
            "id": "text.heading",
            "tag": "h6",
            "styles": (
                "font-size": map.get(constants.$headings, "6"),
            ),
            "variants": (
                "default": constants.$default-heading-variant,
            ),
        )),
    );
}
