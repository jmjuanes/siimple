@use "sass:map";
@use "./constants.scss" as constants;
@use "./utils.scss" as utils;
@use "./variants.scss" as variants;

// Markup module
@mixin markup() {
    // Paragraph style
    p {
        margin-bottom: 1rem;
        margin-top: 0px;
        @include variants.use-default-variant("text.paragraph", (
            "default": constants.$default-paragraph-variant,
        ));
    }
    // Anchor style
    a {
        @include variants.use-default-variant("text.link", (
            "default": (
                "color": "primary",
            ),
        ));
    }
    // Small text
    small {
        @include variants.use-default-variant("text.small", (
            "default": (
                "font-size": "small",
            ),
        ));
    }
    // Bold text
    b,
    strong {
        @include variants.use-default-variant("text.bold", (
            "default": (
                "font-size": "bold",
            ),
        ));
    }
    // Code block style
    pre {
        overflow-x: auto;
        // Fix inline code blocks inside pre elements
        & code {
            color: inherit;
        }
        @include variants.use-default-variant("code.block", (
            "default": (
                "font-family": "monospace",
            ),
        ));
    }
    // Inline code style
    code {
        // font-size: inherit;
        text-decoration: none;
        @include variants.use-default-variant("code.inline", (
            "default": (
                "color": "primary",
                "font-family": "monospace",
                "font-size": "small",
                "font-weight": "bold",
            ),
        ));
    }
    // Rule style
    hr {
        border: 0px;
        display: block;
        height: 0.125rem;
        padding: 0px;
        // Divider first and last child
        &:not(:first-child) {
            margin-top: 1rem;
        }
        &:not(:last-child) {
            margin-bottom: 1rem;
        }
        @include variants.use-default-variant("divider", (
            "default": constants.$default-divider-variant,
        ));
    }
    // Blockquote style
    blockquote {
        border-left-color: currentColor;
        border-left-style: solid;
        border-left-width: 0.25rem;
        display: block;
        margin-bottom: 1rem;
        margin-left: 0px;
        margin-right: 0px;
        opacity: 0.6;
        padding-bottom: 0.75rem;
        padding-left: 1.25rem;
        padding-right: 0.75rem;
        padding-top: 0.75rem;
        @include variants.use-default-variant("blockquote", (
            "default": (
                "color": "text",
            ),
        ));
    }
    // Table style
    table {
        width: 100%;
        @include variants.use-default-variant("table", (
            "default": utils.empty-map(),
        ));
    }
    // Headings
    @for $index from 1 through 6 {
        h#{$index} {
            font-size: map.get(constants.$headings, "#{$index}");
            @include variants.use-default-variant("text.heading", (
                "default": constants.$default-heading-variant,
            ));
        }
    }
}
